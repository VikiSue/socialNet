{"version":3,"sources":["Components/Friends/Friends.jsx"],"names":["FriendsContainer","connect","state","users","isLoading","fetchUsers","onUsersPageChange","getSelectedUser","useState","newUsers","setNewUsers","friends","setFriends","useEffect","length","filter","item","follow","className","list","url"],"mappings":"+LA8CMA,EAAmBC,aACvB,SAAAC,GAAK,MAAK,CACRC,MAAOD,EAAMC,MAAMA,MACnBC,UAAWF,EAAMC,MAAMC,aAEzB,CAAEC,eAAYC,sBAAmBC,qBALVN,EArCT,SAAC,GAA0E,IAAxEE,EAAuE,EAAvEA,MAAOE,EAAgE,EAAhEA,WAAYD,EAAoD,EAApDA,UAAWE,EAAyC,EAAzCA,kBAAmBC,EAAsB,EAAtBA,gBAAsB,EACxDC,mBAAS,YAAIL,IAD2C,mBACjFM,EADiF,KACvEC,EADuE,OAE1DF,mBAAS,IAFiD,mBAEjFG,EAFiF,KAExEC,EAFwE,KAWxF,OAPEC,qBAAW,WACS,IAAjBV,EAAMW,OAAeJ,EAAYL,EAAW,IAAMK,EAAY,YAAIP,IAEzES,EAAWH,EAASM,QAAO,SAAAC,GAAI,OAAoB,IAAhBA,EAAKC,aAEnC,CAACd,IAEG,yBAAKe,UAAU,WAClB,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,WAAhB,KACA,0BAAMA,UAAU,WAAhB,KACA,0BAAMA,UAAU,WAAhB,KACA,0BAAMA,UAAU,WAAhB,KACA,0BAAMA,UAAU,WAAhB,KACA,0BAAMA,UAAU,WAAhB,KACA,0BAAMA,UAAU,WAAhB,OAGPd,EACG,kBAAC,IAAD,MAEI,kBAAC,IAAD,CACIe,KAAMR,EACNS,IAAI,YACJf,WAAYA,EACZC,kBAAmBA,EACnBC,gBAAiBA,QAcpBP","file":"static/js/9.fea84f54.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchUsers } from \"../../actions/fetchUsers\";\r\nimport {onUsersPageChange} from \"../../actions/onUsersPageChange\";\r\nimport {getSelectedUser} from \"../../actions/getSelectedUser\";\r\nimport UsersList from \"../reusableComponents/UsersList/UsersList\";\r\nimport Loader from \"../reusableComponents/Loader/Loader\";\r\n\r\n\r\nconst Friends = ({ users, fetchUsers, isLoading, onUsersPageChange, getSelectedUser }) => {\r\n  const [newUsers, setNewUsers] = useState([...users]);\r\n  const [friends, setFriends] = useState([]);\r\n\r\n    useEffect( () => {\r\n       users.length === 0 ? setNewUsers(fetchUsers(1)) : setNewUsers([...users]);\r\n\r\nsetFriends(newUsers.filter(item => item.follow === true));\r\n\r\n  }, [users]);\r\n\r\n  return <div className=\"friends\">\r\n      <div className=\"rainbow-text\">\r\n          <div className=\"title-text\">\r\n              <span className=\"letters\">F</span>\r\n              <span className=\"letters\">R</span>\r\n              <span className=\"letters\">I</span>\r\n              <span className=\"letters\">E</span>\r\n              <span className=\"letters\">N</span>\r\n              <span className=\"letters\">D</span>\r\n              <span className=\"letters\">S</span>\r\n          </div>\r\n      </div>\r\n      {isLoading ? (\r\n          <Loader />\r\n      ) : (\r\n              <UsersList\r\n                  list={friends}\r\n                  url=\"/friends/\"\r\n                  fetchUsers={fetchUsers}\r\n                  onUsersPageChange={onUsersPageChange}\r\n                  getSelectedUser={getSelectedUser}\r\n              />\r\n      )}\r\n  </div>;\r\n};\r\n\r\nconst FriendsContainer = connect(\r\n  state => ({\r\n    users: state.users.users,\r\n    isLoading: state.users.isLoading\r\n  }),\r\n  { fetchUsers, onUsersPageChange, getSelectedUser }\r\n)(Friends);\r\n\r\nexport default FriendsContainer;\r\n"],"sourceRoot":""}