{"version":3,"sources":["actions/sendMessage.js","Components/Messages/MessageDialog/MessageDialog.jsx","Components/Messages/MessageDialog/useMessageDialog.js"],"names":["sendMessage","Date","getHours","getMinutes","getSeconds","getDate","getMonth","getFullYear","message","id","dispatch","type","SEND_MESSAGE_REQUEST","callApi","then","result","SEND_MESSAGE_SUCCESS","payload","date","text","mine","catch","err","SEND_MESSAGE_FAILURE","MessageDialogWithRouter","withRouter","isLogged","match","friendsMessages","myMessages","myPhoto","isLoading","params","useState","textInput","setTextInput","conversation","setConversation","dialog","filter","item","useEffect","myDialogs","allConversation","messages","sort","a","b","split","reverse","handleInput","useCallback","e","target","value","handleSendMessage","useMessageDialog","className","src","img","alt","from","online","Loader","map","key","Math","random","name","onChange","onClick","preventDefault","MessageContainer","connect","state","logIn","profile","photo"],"mappings":"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","file":"static/js/7.2667067e.chunk.js","sourcesContent":["import {\r\n  SEND_MESSAGE_REQUEST,\r\n  SEND_MESSAGE_SUCCESS,\r\n  SEND_MESSAGE_FAILURE\r\n} from \"./../types/types\";\r\nimport { callApi } from \"../services/callApi\";\r\n\r\n\r\n\r\nconst answers = [\r\n  { date:   new Date().getHours() +\r\n        \":\" +\r\n        new Date().getMinutes() +\r\n        \":\" +\r\n        new Date().getSeconds() +\r\n        \"  \" +\r\n        new Date().getDate() +\r\n        \"/\" +\r\n        (new Date().getMonth() + 1) +\r\n        \"/\" +\r\n        new Date().getFullYear(), text: \"I love my bed, but I'd rather be in yours.\" },\r\n  {\r\n    date:   new Date().getHours() +\r\n    \":\" +\r\n    new Date().getMinutes() +\r\n    \":\" +\r\n    new Date().getSeconds() +\r\n    \"  \" +\r\n    new Date().getDate() +\r\n    \"/\" +\r\n    (new Date().getMonth() + 1) +\r\n    \"/\" +\r\n    new Date().getFullYear(),\r\n    text: \"Back in 5 minutes (If not, read this status again).\"\r\n  },\r\n  { date:   new Date().getHours() +\r\n        \":\" +\r\n        new Date().getMinutes() +\r\n        \":\" +\r\n        new Date().getSeconds() +\r\n        \"  \" +\r\n        new Date().getDate() +\r\n        \"/\" +\r\n        (new Date().getMonth() + 1) +\r\n        \"/\" +\r\n        new Date().getFullYear(), text: \"Sometimes I prefer to use my face as emoticons.\" },\r\n  {\r\n    date:   new Date().getHours() +\r\n    \":\" +\r\n    new Date().getMinutes() +\r\n    \":\" +\r\n    new Date().getSeconds() +\r\n    \"  \" +\r\n    new Date().getDate() +\r\n    \"/\" +\r\n    (new Date().getMonth() + 1) +\r\n    \"/\" +\r\n    new Date().getFullYear(),\r\n    text:\r\n      \"It hurts when you go to unfriend someone, and you find they've beaten you to it!\"\r\n  },\r\n  { date:   new Date().getHours() +\r\n  \":\" +\r\n  new Date().getMinutes() +\r\n  \":\" +\r\n  new Date().getSeconds() +\r\n  \"  \" +\r\n  new Date().getDate() +\r\n  \"/\" +\r\n  (new Date().getMonth() + 1) +\r\n  \"/\" +\r\n  new Date().getFullYear(), text: \"Food is an important part of a balanced diet.\" },\r\n  {\r\n    date:   new Date().getHours() +\r\n    \":\" +\r\n    new Date().getMinutes() +\r\n    \":\" +\r\n    new Date().getSeconds() +\r\n    \"  \" +\r\n    new Date().getDate() +\r\n    \"/\" +\r\n    (new Date().getMonth() + 1) +\r\n    \"/\" +\r\n    new Date().getFullYear(),\r\n    text: \"At first, I didn't like my beard; then it grew on me.\"\r\n  }\r\n];\r\n\r\nexport const sendMessage = (message, id) => dispatch => {\r\n  dispatch({ type: SEND_MESSAGE_REQUEST });\r\n\r\n  callApi(message)\r\n    .then(result =>\r\n      dispatch({\r\n        type: SEND_MESSAGE_SUCCESS,\r\n        payload: {\r\n          message: {\r\n            date:\r\n              new Date().getHours() +\r\n              \":\" +\r\n              new Date().getMinutes() +\r\n              \":\" +\r\n              new Date().getSeconds() +\r\n              \"  \" +\r\n              new Date().getDate() +\r\n              \"/\" +\r\n              (new Date().getMonth() + 1) +\r\n              \"/\" +\r\n              new Date().getFullYear(),\r\n            text: message,\r\n            mine: \"mine\"\r\n          },\r\n          id: id\r\n        }\r\n      })\r\n    )\r\n    .catch(err => {\r\n      dispatch({ type: SEND_MESSAGE_FAILURE, err });\r\n    });\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport { useMessageDialog } from \"./useMessageDialog\";\r\nimport { sendMessage } from \"./../../../actions/sendMessage\";\r\nimport Loader from \"../../reusableComponents/Loader/Loader\";\r\nimport ScrollToBottom from \"react-scroll-to-bottom\";\r\nimport LogIn from \"../../LogIn/LogIn\";\r\n\r\nconst MessageDialog = ({\r\n    isLogged,\r\n  match,\r\n  friendsMessages,\r\n  myMessages,\r\n  myPhoto,\r\n  sendMessage,\r\n  isLoading\r\n}) => {\r\n  const id = match.params.id;\r\n  const {\r\n    handleInput,\r\n    handleSendMessage,\r\n    conversation,\r\n    dialog,\r\n    textInput\r\n  } = useMessageDialog(friendsMessages, myMessages, id);\r\n\r\n  const handleSend = e => {\r\n    e.preventDefault();\r\n    sendMessage(textInput, id);\r\n    handleSendMessage();\r\n  };\r\n\r\n  return (\r\n\r\n    <div className=\"dialogs\">\r\n      <div className=\"dialogs__header\">\r\n        <div className=\"dialogs__photo\">\r\n          <img src={dialog.img} alt=\"photo\" className=\"dialogs__img\" />\r\n        </div>\r\n        <div className=\"dialogs__name\">{dialog.from}</div>\r\n        <p className={dialog.online ? \"dialogs__online\" : \"hidden\"}>online</p>\r\n        <p className={dialog.online ? \"hidden\" : \"dialogs__offline\"}>offline</p>\r\n      </div>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <ScrollToBottom className=\"dialogs__scroll\">\r\n          <ul className=\"dialogs__list\">\r\n            {conversation.map(item => (\r\n              <li\r\n                key={Math.random()}\r\n                className={item.mine ? \"dialogs__my\" : \"dialogs__outcome\"}\r\n              >\r\n                <div\r\n                  className={\r\n                    item.mine\r\n                      ? \"hidden\"\r\n                      : \"dialogs__photo  dialogs__photo--message\"\r\n                  }\r\n                >\r\n                  <img src={dialog.img} alt=\"photo\" className=\"dialogs__img\" />\r\n                </div>\r\n                <div\r\n                  className={\r\n                    item.mine\r\n                      ? \"dialogs__info dialogs__info--my\"\r\n                      : \"dialogs__info \"\r\n                  }\r\n                >\r\n                  <div className=\"dialogs__date\">{item.date}</div>\r\n                  <div className=\"dialogs__text\">{item.text}</div>\r\n                </div>\r\n                <div\r\n                  className={\r\n                    !item.mine\r\n                      ? \"hidden\"\r\n                      : \"dialogs__photo dialogs__photo--message\"\r\n                  }\r\n                >\r\n                  <img src={myPhoto} alt=\"photo\" className=\"dialogs__img\" />\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n\r\n          <form className={isLogged ? \"dialogs__form\" : \"hidden\"}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"messageField\"\r\n              className=\"dialogs__input\"\r\n              onChange={handleInput}\r\n              value={textInput}\r\n            />\r\n            <button className=\"btn dialogs__btn\" onClick={handleSend}>\r\n              SEND\r\n            </button>\r\n          </form>\r\n        </ScrollToBottom>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MessageDialogWithRouter = withRouter(MessageDialog);\r\n\r\nconst MessageContainer = connect(\r\n  state => ({\r\n      isLogged: state.logIn.isLogged,\r\n    friendsMessages: state.messages.friendsMessages,\r\n    myMessages: state.messages.myMessages,\r\n    isLoading: state.messages.isLoading,\r\n    myPhoto: state.profile.photo\r\n  }),\r\n  { sendMessage }\r\n)(MessageDialogWithRouter);\r\n\r\nexport default MessageContainer;\r\n","import React, { useCallback, useEffect, useState} from \"react\";\r\n\r\nexport const useMessageDialog = (friendsMessages, myMessages, id) => {\r\n  const [textInput, setTextInput] = useState(\"\");\r\n  const [conversation, setConversation] = useState([]);\r\n  const dialog = friendsMessages.filter(item => item.id == id)[0];\r\n\r\n\r\n  useEffect(() => {\r\n    const myDialogs = myMessages.filter(item => item.id == id)[0];\r\n    const dialogs = myDialogs\r\n      ? [...dialog.messages, ...myDialogs.messages]\r\n      : [...dialog.messages];\r\n    const allConversation = dialogs.sort((a, b) =>\r\n      a.date.split(\"/\" || \" \").reverse() > b.date.split(\"/\" || \" \").reverse() ? 1 : -1\r\n    );\r\n\r\n    setConversation(allConversation);\r\n\r\n  }, [friendsMessages, myMessages]);\r\n\r\n  const handleInput = useCallback(\r\n    e => {\r\n      const text = e.target.value;\r\n      setTextInput(text);\r\n    },\r\n    [textInput]\r\n  );\r\n  const handleSendMessage  = useCallback(e => {\r\n\r\n    setTextInput(\"\");\r\n  }, [textInput]);\r\n\r\n  return {\r\n    handleInput,\r\n    handleSendMessage,\r\n    conversation,\r\n    dialog,\r\n    textInput,\r\n\r\n  };\r\n};\r\n"],"sourceRoot":""}